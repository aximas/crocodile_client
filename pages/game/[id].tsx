import type { NextPage } from "next";
import Head from "next/head";
import styles from "./../../styles/Game.module.scss";
import React, {
  FormEvent,
  FormEventHandler,
  useEffect,
  useRef,
  useState,
} from "react";
import { Canvas, PaintCoords } from "../../components/Canvas";
import { io, Socket } from "socket.io-client";

type Chat = {
  name: string;
  text: string;
};

const Home: NextPage = () => {
  const socketRef = useRef<Socket>();
  const canvasCtxRef = useRef<CanvasRenderingContext2D>();
  const [messages, setMessages] = useState<Chat[]>([]);
  const [inputValue, setInputValue] = useState("");

  useEffect(() => {
    if (typeof window !== "undefined") {
      socketRef.current = io("https://shrouded-falls-37608.herokuapp.com/");

      socketRef.current.on("clear_canvas", () => {
        if (canvasCtxRef.current) {
          canvasCtxRef.current?.clearRect(0, 0, 600, 600);
        }
      });

      socketRef.current.on("receive_message", (data) => {
        console.log(data);
        setMessages((prev) => [...prev, data]);
      });

      socketRef.current.on("repaint", ({ x, y, dx, dy }) => {
        if (canvasCtxRef.current) {
          console.log(x);
          canvasCtxRef.current.beginPath();
          canvasCtxRef.current.moveTo(x, y);
          canvasCtxRef.current.lineTo(x - dx, y - dy);
          canvasCtxRef.current.stroke();
          canvasCtxRef.current.closePath();
        }
        console.log("canvasRef", canvasCtxRef);
      });
    }

    return () => {
      if (socketRef.current) socketRef.current.disconnect();
    };
  }, []);

  const onPaint = (data: PaintCoords) => {
    if (socketRef.current) {
      socketRef.current.emit("paint", data);
    }
  };

  const onClear = () => {
    if (socketRef.current) {
      socketRef.current.emit("clear");
    }
  };

  const onSubmitSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (socketRef.current) {
      socketRef.current.emit("send_message", {
        name: "Vasya",
        text: inputValue,
      });
    }
    setInputValue("");
  };

  return (
    <div className={styles.wrapper}>
      <div className={styles.container}>
        <Head>
          <title>Game</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className={styles.game}>
          <div className={styles.chat}>
            <div className={styles.chatTitle}>Chat</div>
            <div className={styles.chatMessage}>
              {messages.map((message, i) => (
                <div key={i} className={styles.chatItem}>
                  <p>{message.name}</p>
                  <p>{message.text}</p>
                </div>
              ))}
            </div>

            <form className={styles.chatInput} onSubmit={onSubmitSendMessage}>
              <input
                value={inputValue}
                onChange={(e) => setInputValue(e.currentTarget.value)}
                type="text"
              />
              <button>Send</button>
            </form>
          </div>
          <div className={styles.canvas}>
            <Canvas
              onClear={onClear}
              onPaint={onPaint}
              onInit={(canvasCtx) => (canvasCtxRef.current = canvasCtx)}
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
